<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Assets on Replicated Help Center</title>
    <link>/docs/ship.yaml/assets/</link>
    <description>Recent content in Assets on Replicated Help Center</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Replicated, Inc</copyright>
    <lastBuildDate>Wed, 02 May 2018 04:02:20 +0000</lastBuildDate>
    
	<atom:link href="/docs/ship.yaml/assets/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Asset Types</title>
      <link>/docs/ship.yaml/assets/asset-types/</link>
      <pubDate>Wed, 02 May 2018 01:19:20 +0000</pubDate>
      
      <guid>/docs/ship.yaml/assets/asset-types/</guid>
      <description>Assets are the core object that enables you to describe applications managed by Ship. They allow you to define scripts, manifests, and application artifacts needed to deploy your application to your end customer&amp;rsquo;s internal infrastructure. The goal of Ship assets is to give your customers controlled, transparent access to the same resources you use to deploy your SaaS application to your own private cloud. Assets can include things like:
 Scripts for installing and upgrading your application to a cloud server Private Docker images or .</description>
    </item>
    
    <item>
      <title>Inline Asset Type</title>
      <link>/docs/ship.yaml/assets/inline/</link>
      <pubDate>Wed, 02 May 2018 01:19:20 +0000</pubDate>
      
      <guid>/docs/ship.yaml/assets/inline/</guid>
      <description>Inline asset types are useful to deliver text files such as Kubernetes manifests, application config files and shell scripts. The YAML reference documentation is published that defines all available keys.
Kubernetes Manifests An example of delivering a simple Kubernetes manifest as an inline asset in Ship is:
assets: v1: - inline: dest: ./k8s/redis.yml contents: | --- apiVersion: v1 kind: Pod metadata: labels: name: redis redis-sentinel: &amp;quot;true&amp;quot; role: master name: redis-master spec: containers: - name: master image: redis:4.</description>
    </item>
    
    <item>
      <title>Docker Asset Type</title>
      <link>/docs/ship.yaml/assets/docker/</link>
      <pubDate>Wed, 02 May 2018 01:19:20 +0000</pubDate>
      
      <guid>/docs/ship.yaml/assets/docker/</guid>
      <description>Docker asset types are useful to deliver both private and public Docker images to an installation. It&amp;rsquo;s recommended to build for airgapped environments, where images cannot be pulled directly from the upstream registry. Using the docker asset type, it&amp;rsquo;s possible to pull and load images on the workstation running the installation. Once pulled, adding a simple script to push these to a local registry will ensure that the cluster can bootstrap and run offline.</description>
    </item>
    
    <item>
      <title>Web Asset Type</title>
      <link>/docs/ship.yaml/assets/web/</link>
      <pubDate>Wed, 02 May 2018 01:19:20 +0000</pubDate>
      
      <guid>/docs/ship.yaml/assets/web/</guid>
      <description>Web Asset types are useful to deliver any web content from a private or public URL. While Web Asset types are ideal for pulling data from private data stores to be used in a Ship application, their ability to interact with HTTP and HTTPS web services provides flexibility in how you configure your Ship application. The YAML reference documentation is published that defines all available keys.
When to use the Web Asset Type Compared to other asset types supported by Ship, Web Asset types offer:</description>
    </item>
    
    <item>
      <title>Github Asset Type</title>
      <link>/docs/ship.yaml/assets/github/</link>
      <pubDate>Wed, 02 May 2018 01:19:20 +0000</pubDate>
      
      <guid>/docs/ship.yaml/assets/github/</guid>
      <description>GitHub assets can be used to pull content from private or public GitHub repositories. With a GitHub asset, you can deliver any or all of:
 An entire repository A directory in a repository A single file from a repository  Delivering Assets from Private Repositories To deliver an asset from a private github repository, you&amp;rsquo;ll need to install the Replicated GitHub Application into your organization and give it access to any repositories you&amp;rsquo;d like to deliver.</description>
    </item>
    
  </channel>
</rss>