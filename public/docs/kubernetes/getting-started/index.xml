<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shipping With Kubernetes on Replicated on Replicated Help Center</title>
    <link>/docs/kubernetes/getting-started/</link>
    <description>Recent content in Shipping With Kubernetes on Replicated on Replicated Help Center</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Replicated, Inc</copyright>
    <lastBuildDate>Sun, 03 Jul 2016 04:02:20 +0000</lastBuildDate>
    
	<atom:link href="/docs/kubernetes/getting-started/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Shipping With Kubernetes on Replicated</title>
      <link>/docs/kubernetes/getting-started/overview/</link>
      <pubDate>Sun, 03 Jul 2016 04:02:20 +0000</pubDate>
      
      <guid>/docs/kubernetes/getting-started/overview/</guid>
      <description>Replicated can be used with a Kubernetes application to deploy an enterprise-installable version of your application. Replicated is a platform that adds functionality to an application to allow for easy behind-the-firewall installation and integration into enterprise systems. When using Replicated with Kubernetes, developers have the ability to reuse most of the existing Kubernetes specs and Replicated will be responsible for installing and maintaining a Kubernetes cluster for the enterprise installation.</description>
    </item>
    
    <item>
      <title>Concepts and Terminology</title>
      <link>/docs/kubernetes/getting-started/concepts/</link>
      <pubDate>Sun, 03 Jul 2016 04:02:20 +0000</pubDate>
      
      <guid>/docs/kubernetes/getting-started/concepts/</guid>
      <description>Before shipping your application, there are a few terms to learn, as they are used throughout this guide.
Application An application (or app) is the software package you are installing onto your customer&amp;rsquo;s servers. It isn&amp;rsquo;t a single binary, rather it&amp;rsquo;s all of the individual components which make your product.
Channel Channels are used to stage out releases for customers or customer segments. By default there are Stable, Beta and Unstable channels.</description>
    </item>
    
    <item>
      <title>Development Environment</title>
      <link>/docs/kubernetes/getting-started/development-environment/</link>
      <pubDate>Sun, 03 Jul 2016 04:02:20 +0000</pubDate>
      
      <guid>/docs/kubernetes/getting-started/development-environment/</guid>
      <description>Once your application is working in Docker, you&amp;rsquo;ll want to set up a simple environment to iterate on your Replicated YAML. Our Replicated Studio is designed to shorten the cycle between writing and testing YAML and will recommend best practices to help you solve problems quickly.
 Easy Install (Recommended)  This script will install Kubernetes, Replicated, and Studio on your development machine.
curl -sSL https://get.replicated.com/studio-k8s | sudo bash   Replicated Studio Manual Install (Advanced)  If you need to customize your configuration, follow these three steps and adapt as needed rather than using the easy install script above.</description>
    </item>
    
    <item>
      <title>Docker Registries</title>
      <link>/docs/kubernetes/getting-started/docker-registries/</link>
      <pubDate>Sun, 03 Jul 2016 04:02:20 +0000</pubDate>
      
      <guid>/docs/kubernetes/getting-started/docker-registries/</guid>
      <description>When building your application, you have the option to use the Replicated private registry, or any supported external private or public registry.
 Replicated Registry  Every application created in Replicated has a completely isolated, private Docker registry available. You can push images to your private registry by finding the endpoint at (https://vendor.replicated.com/#/images) and using the Docker CLI to tag and push images. When using the Kubernetes Scheduler, Replicated will be able to automatically use the customer license file to authenticate and pull any images from the Replicated Registry.</description>
    </item>
    
    <item>
      <title>Create &amp; Manage Releases</title>
      <link>/docs/kubernetes/getting-started/manage-releases/</link>
      <pubDate>Sun, 03 Jul 2016 04:02:20 +0000</pubDate>
      
      <guid>/docs/kubernetes/getting-started/manage-releases/</guid>
      <description>Create Releases  The Replicated vendor portal provides you with a location to create and release versions of your application to various release channels. The vendor portal hosts a built-in YAML editor and linter to help you write and validate YAML.
 Promoting Releases  Once a release is ready to be installed, the release can be promoted to one or more release channels. More details can be found in our Promote Releases documentation.</description>
    </item>
    
    <item>
      <title>Create Customers &amp; Licenses</title>
      <link>/docs/kubernetes/getting-started/create-licenses/</link>
      <pubDate>Sun, 03 Jul 2016 04:02:20 +0000</pubDate>
      
      <guid>/docs/kubernetes/getting-started/create-licenses/</guid>
      <description>Each customer you deploy to via Replicated will need a separate license file for their installation. This license file identifies the customer &amp;amp; application during the installation and update processes. A customer license is created in the Customers section of the vendor portal. You can manage the values and properties of that customer and license, including custom license fields, by selecting an individual customer.
If you are looking to create or manage custom license fields you can do so in the License Fields section of the vendor portal or via the Vendor License API.</description>
    </item>
    
  </channel>
</rss>