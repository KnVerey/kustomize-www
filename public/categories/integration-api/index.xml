<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Integration Api on Replicated Help Center</title>
    <link>/categories/integration-api/</link>
    <description>Recent content in Integration Api on Replicated Help Center</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Replicated, Inc</copyright>
    <lastBuildDate>Sun, 03 Jul 2016 04:12:27 +0000</lastBuildDate>
    
	<atom:link href="/categories/integration-api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Audit API</title>
      <link>/api/integration-api/audit-api/</link>
      <pubDate>Sun, 03 Jul 2016 04:12:27 +0000</pubDate>
      
      <guid>/api/integration-api/audit-api/</guid>
      <description>The Audit API provides endpoints for your application to read and write audit events into the audit log.
By default, the audit log will record all Replicated-specific actions. However, to meet enterprise compliance requirements, your application may use the Audit API to log your application&amp;rsquo;s user&amp;rsquo;s actions. These can be viewed and searched from the Replicated console. We recommend combining the audit log with the Identity and Provisioning APIs to map the audit log to an enterprise&amp;rsquo;s identity environment.</description>
    </item>
    
    <item>
      <title>Console API</title>
      <link>/api/integration-api/console-api/</link>
      <pubDate>Sun, 03 Jul 2016 04:12:27 +0000</pubDate>
      
      <guid>/api/integration-api/console-api/</guid>
      <description>The Console API offers developers the ability to retrieve Replicated console settings.
Console settings are not the same as application config settings. Application config settings should be provided to your applications via template functions in the release YAML.   Applications may find it useful to know certain properties about a Replicated install, such as it&amp;rsquo;s airgap status, console host, or proxy settings. The Console API can be used to retrieve all of this information.</description>
    </item>
    
    <item>
      <title>Identity API</title>
      <link>/api/integration-api/identity-api/</link>
      <pubDate>Sun, 03 Jul 2016 04:12:27 +0000</pubDate>
      
      <guid>/api/integration-api/identity-api/</guid>
      <description>About the Identity API  The Identity API provides synchronous authentication with an identity server, often a corporate LDAP or Active Directory (AD) service. In this model, login requests are made to the Replicated Integration API, which validates the credentials provided against the identity service. Applications using the Identity API rely on the upstream identity provider for local identity.
 API Methods  The Identity API is part of the Integration API.</description>
    </item>
    
    <item>
      <title>License API</title>
      <link>/api/integration-api/license-api/</link>
      <pubDate>Sun, 03 Jul 2016 04:12:27 +0000</pubDate>
      
      <guid>/api/integration-api/license-api/</guid>
      <description>License API The License API provides methods for your application to query properties of the installed license. This can be used in a variety of ways to provide multiple plans for an application. For example, the license API can be used to limit the number of workers that can run and be used in an application.
License API Endpoint The License API is part of the Integration API. To discover the Integration API base endpoint, query the REPLICATED_INTEGRATIONAPI environment variable from inside your container.</description>
    </item>
    
    <item>
      <title>Provisioning API</title>
      <link>/api/integration-api/provisioning-api/</link>
      <pubDate>Sun, 03 Jul 2016 04:12:27 +0000</pubDate>
      
      <guid>/api/integration-api/provisioning-api/</guid>
      <description>About the Provisioning API  The Provisioning API enables application developers to expose a set of API endpoints, which Replicated will sync to from the LDAP server.
In this model, applications will have a list of all user accounts, without the passwords. Use the Identity API to authenticate a user in the application.
Replicated brokers the interaction between the identity server and your application. Depending on the identity server used and it&amp;rsquo;s configuration, changes are propagated to Replicated via push or periodic polling.</description>
    </item>
    
    <item>
      <title>Status API</title>
      <link>/api/integration-api/status-api/</link>
      <pubDate>Sun, 03 Jul 2016 04:12:27 +0000</pubDate>
      
      <guid>/api/integration-api/status-api/</guid>
      <description>The Status API provides a method for user applications to update the status of an application during it&amp;rsquo;s startup lifecycle. For applications with multiple startup steps, this can be used to inform users of long-running actions such as migrations and bootstrapping. The Status API can also aid in debugging by giving users insight into the application startup phase they experienced an issue with.
Status API Endpoint The Status API is part of the Integration API.</description>
    </item>
    
    <item>
      <title>Version API</title>
      <link>/api/integration-api/version-api/</link>
      <pubDate>Sun, 03 Jul 2016 04:12:27 +0000</pubDate>
      
      <guid>/api/integration-api/version-api/</guid>
      <description>The Version API provides endpoints for your application to read the current application version, release notes, pending updates and apply updates. Applications that use automatic updates can use this to notify users of pending updates and apply them without having to visit the Replicated console.
Version API The Version API is part of the Integration API. To discover the Integration API base endpoint, query the REPLICATED_INTEGRATIONAPI environment variable from inside your container.</description>
    </item>
    
  </channel>
</rss>