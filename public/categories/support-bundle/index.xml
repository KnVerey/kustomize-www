<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Support Bundle on Replicated Help Center</title>
    <link>/categories/support-bundle/</link>
    <description>Recent content in Support Bundle on Replicated Help Center</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Replicated, Inc</copyright>
    <lastBuildDate>Tue, 30 Jan 2018 04:02:20 +0000</lastBuildDate>
    
	<atom:link href="/categories/support-bundle/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generate a Support Bundle</title>
      <link>/guides/troubleshoot/generate/</link>
      <pubDate>Tue, 30 Jan 2018 04:02:20 +0000</pubDate>
      
      <guid>/guides/troubleshoot/generate/</guid>
      <description>Once you&amp;rsquo;ve created a support bundle spec, you can give a command to your customer to generate a support bundle based on the spec. If you change the spec to include additional collected files, the command your customer will run doesn&amp;rsquo;t change.
To collect a support bundle, find the customer on https://console.replicated.com/customers and go to the Customers list. Select the customer and click the &amp;ldquo;Generate a support bundle&amp;rdquo; link. There will be a single docker run command that&amp;rsquo;s customized for this one customer.</description>
    </item>
    
    <item>
      <title>Github Integration</title>
      <link>/guides/troubleshoot/github/</link>
      <pubDate>Tue, 30 Jan 2018 04:02:20 +0000</pubDate>
      
      <guid>/guides/troubleshoot/github/</guid>
      <description>Once you&amp;rsquo;ve created a support bundle spec and have collected a few bundles from your customers, it&amp;rsquo;s a good idea to check your spec into source control and treat it the same way you&amp;rsquo;d treat other code. Having a process around code reviews and being able to accept pull requests to update the spec is useful and supported by Replicated.
On the Create a new Support Bundle Spec page, enable the &amp;ldquo;Link to spec in GitHub&amp;rdquo; option.</description>
    </item>
    
    <item>
      <title>Iterating</title>
      <link>/guides/troubleshoot/iterating/</link>
      <pubDate>Tue, 30 Jan 2018 04:02:20 +0000</pubDate>
      
      <guid>/guides/troubleshoot/iterating/</guid>
      <description>Once you&amp;rsquo;ve run your first support bundle, the next step is to get comfortable expanding your spec and generating updated bundles based on your changes.
To start, we&amp;rsquo;ll want to navigate to the &amp;ldquo;specs&amp;rdquo; tab of console.replicated.com, and pull up our default spec.
From here, we can click edit, and it will pull up the spec editor, which should be populated with some defaults based on the tiles we checked back in Support Bundle Specs:</description>
    </item>
    
    <item>
      <title>Support Bundle Specs</title>
      <link>/guides/troubleshoot/spec/</link>
      <pubDate>Tue, 30 Jan 2018 04:02:20 +0000</pubDate>
      
      <guid>/guides/troubleshoot/spec/</guid>
      <description>The Support Bundle is a standalone tool that you can use to retrieve and upload troubleshooting data from servers that aren&amp;rsquo;t running the full Replicated software, when Replicated will not start, or for servers that you don&amp;rsquo;t have access to. In this guide, we will sign up for the Replicated Console, and create our first support bundle spec.
The Replicated Console is your primary portal for managing support bundle specifications, the support bundles generated from them, and your customers.</description>
    </item>
    
  </channel>
</rss>