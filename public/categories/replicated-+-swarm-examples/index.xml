<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Replicated &#43; Swarm Examples on Replicated Help Center</title>
    <link>/categories/replicated-&#43;-swarm-examples/</link>
    <description>Recent content in Replicated &#43; Swarm Examples on Replicated Help Center</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Replicated, Inc</copyright>
    <lastBuildDate>Sun, 03 Jul 2016 04:02:20 +0000</lastBuildDate>
    
	<atom:link href="/categories/replicated-+-swarm-examples/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker Swarm Examples</title>
      <link>/docs/swarm/examples/overview/</link>
      <pubDate>Sun, 03 Jul 2016 04:02:20 +0000</pubDate>
      
      <guid>/docs/swarm/examples/overview/</guid>
      <description>This section contains some examples of shipping an application in Replicated with Docker Swarm.
 Redis: An example of using user configuration with Swarm to template out a Redis config file Nginx Secrets and Certificates: An example of using secrets with Nginx to upload custom TLS certificates and mount them into an nginx container  </description>
    </item>
    
    <item>
      <title>Docker Swarm Examples</title>
      <link>/docs/swarm/examples/</link>
      <pubDate>Sun, 03 Jul 2016 04:02:20 +0000</pubDate>
      
      <guid>/docs/swarm/examples/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Nginx Secrets</title>
      <link>/docs/swarm/examples/secrets-certificates/</link>
      <pubDate>Sun, 03 Jul 2016 04:02:20 +0000</pubDate>
      
      <guid>/docs/swarm/examples/secrets-certificates/</guid>
      <description>Mounted Secrets Example This is an example of an Nginx application mounting certificates with Docker Swarm secrets.
# kind: replicated replicated_api_version: 2.9.2 name: &amp;quot;SecretsApp&amp;quot; properties: console_title: &amp;quot;SecretsApp&amp;quot; config: - name: ssl description: &amp;quot;&amp;quot; test_proc: display_name: Verify TLS settings command: certificate_verify timeout: 5 arg_fields: - tls_key - tls_certificate - hostname items: - name: hostname title: Hostname type: text recommended: false default: &amp;quot;&amp;quot; value_cmd: name: host_ip value_at: 0 when: &amp;quot;&amp;quot; affix: &amp;quot;&amp;quot; required: true items: [] - name: tls_key title: Private Key File type: file required: true affix: left - name: tls_certificate title: Certificate File type: file required: true affix: right swarm: configs: - name: nginx_config value: | server { listen 443 ssl; server_name localhost; ssl_certificate /run/secrets/site.</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>/docs/swarm/examples/redis/</link>
      <pubDate>Sun, 03 Jul 2016 04:02:20 +0000</pubDate>
      
      <guid>/docs/swarm/examples/redis/</guid>
      <description>Redis Example This is an example of Redis setup with templated configuration. This example will insert some configuration values into the Redis config via templating.
# kind: replicated replicated_api_version: 2.9.2 name: &amp;quot;Redis&amp;quot; properties: console_title: &amp;quot;Redis&amp;quot; config: - name: redis title: Redis Configuration description: Redis Configuration Items items: - name: redis_timeout title: Timeout type: text required: true swarm: configs: - name: redis_config value: | bind 127.0.0.1 port 6379 timeout {{repl ConfigOption &amp;quot;redis_timeout&amp;quot; }} --- # kind: scheduler-swarm version: &#39;3.</description>
    </item>
    
  </channel>
</rss>